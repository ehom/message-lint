#!/usr/bin/env python3

import json

# Write the rules to a JSON file

rules = [
  {
    "regexp": [r"([\s]{2,})"],
    "outputFile": "extraneous_spaces",
    "desc": "Extraneous Spaces detected"
  },
  {
    "regexp": [r"^(\,)", r"(\,)$", r"^\s*(and|or)\b", r"\b(the|to|by|on|or|and)\b$", r"^{\w+}$"],
    "outputFile": "fragments",
    "desc": "Sentence Fragments"
  },
  {
    "regexp": [r"(the\b\{\w+\})", r"(a\b\{\w+\})", r"(an\b\{\w+\})", r"(a\(n\)\b\{\w+\})"],
    "outputFile": "articles",
    "desc": "definite and indefinite articles"
  },
  {
    "regexp": [r"(\{\w+\}\s*%)"],
    "outputFile": "percentage",
    "desc": "percentage format"
  },
  {
    "regexp": [r"\'\{\'"],
    "outputFile": "placeholder_quotations",
    "desc": "Incorrect placeholder quoting."
  },
  {
    "regexp": [r"\{\w+\}\s*(year|month|week|day|hour|min|sec|groups|issues|users|people|other|boards|spaces)"],
    "outputFile": "plural_nouns",
    "desc": "Plural Nouns"
  },
  {
    "regexp": [r"(http|https)://", r"(<a\s*.*>\s*.*<\/a>)"],
    "outputFile": "url_uri",
    "desc": "String Resource contains URIs/URLs"
  },
  {
    "regexp": [r"\{\d+\}", r"\{\s*\}"],
    "outputFile": "numbered_placeholders",
    "desc": "String Resource contains numbered placeholders like \u2019{0}\u2019. Please use variable names in "
            "placeholders. "
  },
  {
    "regexp": [r"\{\s*\d\s*,\s*choice.+\}"],
    "outputFile": "choice_formatted",
    "desc": "Find string resources using the choice format"
  },
  {
    "regexp": [r"\'", r"\"", r"[\.]{3}"],
    "outputFile": "ascii_punct",
    "desc": "ASCII punctuation in use. Best Practice is to use their Unicode equivalents."
  },
]


def main():
    output_file = "lint_rules.json"
    with open(output_file, "w") as f:
        json.dump(rules, f, indent=4, sort_keys=False)
    print("Saved to \u2019{0}\u2019".format(output_file))


if __name__ == "__main__":
    main()
